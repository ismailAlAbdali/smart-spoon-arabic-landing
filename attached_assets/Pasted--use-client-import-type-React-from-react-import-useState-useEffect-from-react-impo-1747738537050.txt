"use client";

import type React from "react";
import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Card, CardContent } from "@/components/ui/card";
import {
  MapIcon,
  Mail,
  Phone,
  Baby,
  Layers,
  Map,
  Home,
  Check,
  Star,
} from "lucide-react";
import WhatsAppRedirect from "@/components/massages/whatsapp-redirect";
import SuccessMessage from "@/components/massages/success-messages";

// Service option type
interface ServiceOption {
  id: string;
  label: string;
  icon: React.ReactNode;
}

// Contact method option type
interface ContactMethodOption {
  id: string;
  label: string;
  icon: React.ReactNode;
  description: string;
}

// Contact info type
interface ContactInfo {
  phone: {
    value: string;
    label: string;
  };
  email: {
    value: string;
    label: string;
  };
  whatsapp: {
    value: string;
    label: string;
  };
}

const ContactSection: React.FC = () => {
  // Contact information
  const contactInfo: ContactInfo = {
    phone: {
      value: "+968 9404 4489",
      label: "اتصل بنا",
    },
    email: {
      value: "info@idealevents.om",
      label: "البريد الإلكتروني",
    },
    whatsapp: {
      value: "+968 9404 4489",
      label: "واتساب",
    },
  };

  // Available services
  const serviceOptions: ServiceOption[] = [
    {
      id: "outdoor",
      label: "أنشطة خارجية",
      icon: <MapIcon className="h-6 w-6 text-white" />,
    },
    {
      id: "indoor",
      label: "أنشطة داخلية",
      icon: <Home className="h-6 w-6 text-white" />,
    },
    {
      id: "treasure",
      label: "البحث عن الكنز",
      icon: <Map className="h-6 w-6 text-white" />,
    },
    {
      id: "children",
      label: "أنشطة للأطفال",
      icon: <Baby className="h-6 w-6 text-white" />,
    },
    {
      id: "side",
      label: "أنشطة جانبية",
      icon: <Layers className="h-6 w-6 text-white" />,
    },
    {
      id: "other",
      label: "أنشطة أخرى",
      icon: <Star className="h-6 w-6 text-white" />,
    },
  ];

  // Contact method options
  const contactMethodOptions: ContactMethodOption[] = [
    {
      id: "whatsapp",
      label: "واتساب",
      icon: <Phone className="h-6 w-6 text-white" />,
      description: "سيتم تحويلك مباشرة إلى واتساب لإكمال طلبك",
    },
    {
      id: "email",
      label: "البريد الإلكتروني",
      icon: <Mail className="h-6 w-6 text-white" />,
      description: "سنتواصل معك عبر البريد الإلكتروني في أقرب وقت ممكن",
    },
  ];

  // Form state
  const [formData, setFormData] = useState({
    name: "",
    phone: "",
    email: "",
    message: "",
  });

  // Selected service state (multiple selection)
  const [selectedServices, setSelectedServices] = useState<string[]>([]);

  // Selected contact method state (single selection)
  const [selectedContactMethod, setSelectedContactMethod] =
    useState<string>("whatsapp");

  // Redirect overlay state
  const [showRedirect, setShowRedirect] = useState(false);
  const [countdown, setCountdown] = useState(3);

  // Form submission state
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [requestNumber, setRequestNumber] = useState<number | null>(null);
  const [whatsappMessage, setWhatsappMessage] = useState("");

  // Success message state
  const [showSuccess, setShowSuccess] = useState(false);
  const [successMessage, setSuccessMessage] = useState("");

  // Toggle service selection
  const toggleService = (serviceId: string) => {
    setSelectedServices((prev) =>
      prev.includes(serviceId)
        ? prev.filter((id) => id !== serviceId)
        : [...prev, serviceId],
    );
  };

  // Reset form function
  const resetForm = () => {
    setFormData({
      name: "",
      phone: "",
      email: "",
      message: "",
    });
    setSelectedServices([]);
    setSelectedContactMethod("whatsapp");
    setIsSubmitting(false);
  };

  // Handle countdown and redirect
  useEffect(() => {
    if (!showRedirect) return;

    if (countdown <= 0) {
      // Prepare WhatsApp message
      const serviceText = selectedServices
        .map((id) => serviceOptions.find((s) => s.id === id)?.label)
        .filter(Boolean)
        .join("، ");
      const requestNumberText = requestNumber ? `#${requestNumber}` : "";

      const whatsappMessage =
        encodeURIComponent(`مرحباً، أنا ${formData.name} ${requestNumberText}
الخدمة المطلوبة: ${serviceText}
رقم الهاتف: ${formData.phone}
${formData.email ? `البريد الإلكتروني: ${formData.email}` : ""}

${formData.message}`);

      // Use the correct WhatsApp number
      const whatsappNumber = contactInfo.whatsapp.value.replace(/\+|\s/g, "");
      window.open(
        `https://wa.me/${whatsappNumber}?text=${whatsappMessage}`,
        "_blank",
      );

      // Reset form and overlay
      setShowRedirect(false);
      setCountdown(3);
      resetForm();
      return;
    }

    const timer = setTimeout(() => {
      setCountdown(countdown - 1);
    }, 1000);

    return () => clearTimeout(timer);
  }, [
    showRedirect,
    countdown,
    selectedServices,
    formData,
    serviceOptions,
    requestNumber,
    contactInfo.whatsapp.value,
  ]);

  // Handle input change
  const handleInputChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,
  ) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  // Handle form submission
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (!formData.name || !formData.phone || selectedServices.length === 0) {
      alert("يرجى ملء جميع الحقول المطلوبة واختيار خدمة واحدة على الأقل");
      return;
    }

    if (selectedContactMethod === "email" && !formData.email) {
      alert("يرجى إدخال البريد الإلكتروني للتواصل عبر البريد");
      return;
    }

    setIsSubmitting(true);

    try {
      const selectedServiceNames = selectedServices
        .map((id) => serviceOptions.find((s) => s.id === id)?.label)
        .filter(Boolean) as string[];

      const formDataToSend = {
        ...formData,
        selectedServices: selectedServices
          .map((id) => serviceOptions.find((s) => s.id === id)?.label)
          .filter(Boolean),
        contactMethod:
          contactMethodOptions.find((m) => m.id === selectedContactMethod)
            ?.label || selectedContactMethod,
      };

      // Send the data
      const response = await fetch("/api/contact", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formDataToSend),
      });

      const data = await response.json();

      if (response.ok) {
        console.log("Form submitted successfully:", data);
        setRequestNumber(data.requestNumber);

        // Prepare WhatsApp message
        const serviceText = selectedServices
          .map((id) => serviceOptions.find((s) => s.id === id)?.label)
          .filter(Boolean)
          .join("، ");
        const requestNumberText = data.requestNumber
          ? `#${data.requestNumber}`
          : "";

        const message = `مرحباً، أنا ${formData.name} ${requestNumberText}
الخدمة المطلوبة: ${serviceText}
رقم الهاتف: ${formData.phone}
${formData.email ? `البريد الإلكتروني: ${formData.email}` : ""}
طريقة التواصل المفضلة: ${contactMethodOptions.find((m) => m.id === selectedContactMethod)?.label || ""}

${formData.message}`;

        setWhatsappMessage(message);

        // Handle based on contact method
        if (selectedContactMethod === "whatsapp") {
          setShowRedirect(true);
        } else {
          setSuccessMessage("سنتواصل معك قريباً عبر البريد الإلكتروني");
          setShowSuccess(true);
        }
      } else {
        console.warn("Form submission failed:", data.error);
        alert("حدث خطأ أثناء إرسال الطلب. يرجى المحاولة مرة أخرى.");
      }
    } catch (error) {
      console.error("Error:", error);
      alert("حدث خطأ أثناء إرسال الطلب. يرجى المحاولة مرة أخرى.");
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <section className="py-20 bg-[#030303] text-white" id="contact" dir="rtl">
      {/* WhatsApp Redirect Component */}
      <WhatsAppRedirect
        isOpen={showRedirect}
        onClose={() => {
          setShowRedirect(false);
          resetForm();
        }}
        message={whatsappMessage}
        whatsappNumber={contactInfo.whatsapp.value.replace(/\+|\s/g, "")}
      />

      {/* Success Message Component */}
      <SuccessMessage
        isOpen={showSuccess}
        message={successMessage}
        requestNumber={requestNumber}
        onClose={() => {
          setShowSuccess(false);
          resetForm();
        }}
      />

      <div className="container mx-auto px-4">
        <div className="flex flex-col items-center justify-center mb-16">
          <div className="flex items-center justify-center gap-4 mb-4">
            <div className="w-12 h-1 bg-brand-gold"></div>
            <h2 className="text-4xl font-bold text-[#CBA154]">تواصل معنا</h2>
            <div className="w-12 h-1 bg-brand-gold"></div>
          </div>
          <p className="text-gray-400 max-w-2xl mx-auto text-center">
            نحن هنا لمساعدتك في تحقيق رؤيتك. تواصل معنا اليوم لمناقشة مشروعك
            القادم.
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-12">
          {/* Contact Information */}
          <div className="lg:col-span-1">
            <div className="bg-gradient-to-br from-[#111111] to-[#1a1a1a] p-8 rounded-lg h-full shadow-xl border border-gray-800">
              <h3 className="text-2xl font-bold mb-8 relative">
                <span className="relative z-10">معلومات الاتصال</span>
                <span className="absolute bottom-0 left-0 w-16 h-1 bg-[#CBA154] rounded-full"></span>
              </h3>

              <div className="space-y-8">
                <div className="flex items-center group transition-all duration-300 hover:translate-x-2">
                  <div className="bg-[#007CCC]/20 p-3 rounded-full ml-4">
                    <Phone className="h-5 w-5 text-[#007CCC]" />
                  </div>
                  <div className="text-right">
                    <p className="font-medium text-gray-300 text-sm">
                      اتصل بنا
                    </p>
                    <p className="text-white font-bold">
                      <span dir="ltr" className="inline-block">
                        {contactInfo.phone.value}
                      </span>
                    </p>
                  </div>
                </div>

                <div className="flex items-center group transition-all duration-300 hover:translate-x-2">
                  <div className="bg-[#5B7552]/20 p-3 rounded-full ml-4">
                    <Mail className="h-5 w-5 text-[#5B7552]" />
                  </div>
                  <div className="text-right">
                    <p className="font-medium text-gray-300 text-sm">
                      البريد الإلكتروني
                    </p>
                    <p className="text-white font-bold">
                      <span dir="ltr" className="inline-block">
                        {contactInfo.email.value}
                      </span>
                    </p>
                  </div>
                </div>

                <div className="flex items-center group transition-all duration-300 hover:translate-x-2">
                  <div className="bg-[#3F6F76]/20 p-3 rounded-full ml-4">
                    <MapIcon className="h-5 w-5 text-[#3F6F76]" />
                  </div>
                  <div className="text-right">
                    <p className="font-medium text-gray-300 text-sm">واتساب</p>
                    <p className="text-white font-bold">
                      <span dir="ltr" className="inline-block">
                        {contactInfo.whatsapp.value}
                      </span>
                    </p>
                  </div>
                </div>
              </div>

              {/* Contact buttons */}
              <div className="mt-10 space-y-4">
                <Button
                  onClick={() =>
                    window.open(
                      `https://wa.me/${contactInfo.whatsapp.value.replace(/\+|\s/g, "")}`,
                      "_blank",
                    )
                  }
                  className="w-full bg-[#CBA154] hover:bg-[#CBA154]/90 text-white flex items-center justify-center gap-2 py-6"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="20"
                    height="20"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    strokeWidth="2"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    className="lucide lucide-message-circle"
                  >
                    <path d="M7.9 20A9 9 0 1 0 4 16.1L2 22Z" />
                  </svg>
                  تواصل عبر واتساب
                </Button>

                <Button
                  onClick={() =>
                    (window.location.href = `mailto:${contactInfo.email.value}`)
                  }
                  variant="outline"
                  className="w-full border-[#007CCC] text-[#007CCC] hover:bg-[#007CCC]/10 flex items-center justify-center gap-2 py-6"
                >
                  <Mail className="h-5 w-5" />
                  تواصل عبر البريد الإلكتروني
                </Button>
              </div>
            </div>
          </div>

          {/* Contact Form */}
          <div className="lg:col-span-2">
            <div className="bg-gradient-to-br from-[#111111] to-[#1a1a1a] p-8 rounded-lg shadow-xl border border-gray-800">
              <h3 className="text-2xl font-bold mb-8 relative">
                <span className="relative z-10">أرسل لنا رسالة</span>
                <span className="absolute bottom-0 left-0 w-16 h-1 bg-[#CBA154] rounded-full"></span>
              </h3>

              <form onSubmit={handleSubmit}>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                  <div>
                    <label className="block mb-2 text-sm font-medium">
                      الاسم <span className="text-red-500">*</span>
                    </label>
                    <Input
                      type="text"
                      name="name"
                      value={formData.name}
                      onChange={handleInputChange}
                      className="bg-[#1a1a1a]/50 border-gray-700 text-white focus:border-[#CBA154] focus:ring-[#CBA154]/20"
                      placeholder="أدخل اسمك"
                      required
                    />
                  </div>

                  <div>
                    <label className="block mb-2 text-sm font-medium">
                      رقم الهاتف <span className="text-red-500">*</span>
                    </label>
                    <Input
                      type="tel"
                      name="phone"
                      value={formData.phone}
                      onChange={handleInputChange}
                      className="bg-[#1a1a1a]/50 border-gray-700 text-white focus:border-[#CBA154] focus:ring-[#CBA154]/20"
                      placeholder="أدخل رقم هاتفك"
                      required
                    />
                  </div>
                </div>

                <div className="mb-6">
                  <label className="block mb-2 text-sm font-medium">
                    البريد الإلكتروني
                    {selectedContactMethod === "email" && (
                      <span className="text-red-500"> *</span>
                    )}
                  </label>
                  <Input
                    type="email"
                    name="email"
                    value={formData.email}
                    onChange={handleInputChange}
                    className="bg-[#1a1a1a]/50 border-gray-700 text-white focus:border-[#CBA154] focus:ring-[#CBA154]/20"
                    placeholder="أدخل بريدك الإلكتروني"
                    required={selectedContactMethod === "email"}
                  />
                </div>

                <div className="mb-6">
                  <label className="block mb-2 text-sm font-medium">
                    نوع الخدمة المطلوبة <span className="text-red-500">*</span>
                  </label>
                  <div className="grid grid-cols-2 sm:grid-cols-3 gap-4">
                    {serviceOptions.map((service) => (
                      <Card
                        key={service.id}
                        className={`cursor-pointer transition-all duration-300 overflow-hidden group hover:shadow-lg ${
                          selectedServices.includes(service.id)
                            ? "border-[#CBA154] bg-[#CBA154]/10 shadow-md"
                            : "bg-[#1a1a1a]/50 border-gray-700 hover:border-[#007CCC]"
                        }`}
                        onClick={() => toggleService(service.id)}
                      >
                        <div
                          className={`h-2 w-full ${
                            selectedServices.includes(service.id)
                              ? "bg-[#CBA154]"
                              : "bg-[#3F6F76] group-hover:bg-[#007CCC]"
                          }`}
                        ></div>
                        <CardContent className="p-4 flex flex-col items-center justify-center relative">
                          {selectedServices.includes(service.id) && (
                            <div className="absolute top-2 right-2 bg-[#CBA154] text-white p-1 rounded-full">
                              <Check className="h-3 w-3" />
                            </div>
                          )}
                          <div
                            className={`p-3 rounded-full mb-3 ${
                              selectedServices.includes(service.id)
                                ? "bg-[#CBA154]/20 text-[#CBA154]"
                                : "bg-black/30 text-white group-hover:bg-[#007CCC]/10 group-hover:text-[#007CCC]"
                            }`}
                          >
                            {service.icon}
                          </div>
                          <p
                            className={`text-sm font-bold text-center ${
                              selectedServices.includes(service.id)
                                ? "text-white"
                                : "text-gray-300"
                            }`}
                          >
                            {service.label}
                          </p>
                        </CardContent>
                      </Card>
                    ))}
                  </div>
                </div>

                {/* Preferred Contact Method */}
                <div className="mb-6">
                  <label className="block mb-2 text-sm font-medium">
                    طريقة التواصل المفضلة
                  </label>
                  <div className="grid grid-cols-2 gap-4">
                    {contactMethodOptions.map((method) => (
                      <Card
                        key={method.id}
                        className={`cursor-pointer transition-all duration-200 ${
                          selectedContactMethod === method.id
                            ? "border-[#CBA154] bg-[#CBA154]/10"
                            : "bg-[#1a1a1a]/50 border-gray-700 hover:border-[#007CCC]"
                        }`}
                        onClick={() => setSelectedContactMethod(method.id)}
                      >
                        <CardContent className="p-4 flex flex-col items-center justify-center">
                          <div
                            className={`p-3 rounded-full mb-3 ${
                              selectedContactMethod === method.id
                                ? "bg-[#CBA154]/20"
                                : "bg-black/30"
                            }`}
                          >
                            {method.icon}
                          </div>
                          <p
                            className={`text-sm font-bold text-center mb-2 ${selectedContactMethod === method.id ? "text-white" : "text-gray-300"}`}
                          >
                            {method.label}
                          </p>
                          <p className="text-xs text-gray-400 text-center">
                            {method.description}
                          </p>
                        </CardContent>
                      </Card>
                    ))}
                  </div>
                </div>

                <div className="mb-6">
                  <label className="block mb-2 text-sm font-medium">
                    الرسالة
                  </label>
                  <Textarea
                    name="message"
                    value={formData.message}
                    onChange={handleInputChange}
                    className="bg-[#1a1a1a]/50 border-gray-700 text-white min-h-[120px] focus:border-[#CBA154] focus:ring-[#CBA154]/20"
                    placeholder="اكتب رسالتك هنا..."
                  />
                </div>

                <Button
                  type="submit"
                  className="w-full bg-[#CBA154] hover:bg-[#CBA154]/90 text-white py-3 px-6 rounded-md transition-colors"
                  disabled={isSubmitting}
                >
                  {isSubmitting ? (
                    <div className="flex items-center justify-center">
                      <svg
                        className="animate-spin -ml-1 mr-3 h-5 w-5 text-white"
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                      >
                        <circle
                          className="opacity-25"
                          cx="12"
                          cy="12"
                          r="10"
                          stroke="currentColor"
                          strokeWidth="4"
                        ></circle>
                        <path
                          className="opacity-75"
                          fill="currentColor"
                          d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                        ></path>
                      </svg>
                      جاري الإرسال...
                    </div>
                  ) : (
                    "إرسال الطلب"
                  )}
                </Button>
              </form>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default ContactSection;